# -*- coding: utf-8 -*-
"""Sales_Report.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gqnvb6qy41DqvM_di-OwbHemHPMAayOS
"""

import os

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
from pandas import Series, DataFrame
from pandas.api.types import CategoricalDtype
# %matplotlib inline
import matplotlib.pyplot as plt
pd.set_option('display.max_columns', None)
import warnings
warnings.filterwarnings("ignore")
from google.colab import data_table

sales_df = pd.read_csv("/content/drive/MyDrive/Amazon_sales_report/Amazon Sale Report.csv")

sales_df.info()

"""## **Data Preprocessing section**"""

sales_df.isna().sum()

sales_df.drop(["index","promotion-ids","fulfilled-by","Unnamed: 22"], axis= 1, inplace = True )

sales_df.Status.value_counts()

replacement_mapping = {
    "Shipped - Delivered to Buyer" : "Shipped",
    "Shipped - Returned to Seller" : "Returned",
    "Shipped - Picked Up" : "Shipped",
    "Shipped - Returning to Seller": "Returning",
    "Shipped - Out for Delivery" : "Out for Delivery",
    "Shipped - Rejected by Buyer" : "Rejected",
    "Shipped - Lost in Transit" : "Lost",
    "Shipping" : "Shipped",
    "Shipped - Damaged" : "Damaged",
    "Pending - Waiting for Pick Up" : "Pending Pick Up"
}

for old_value, new_value in replacement_mapping.items():
  sales_df["Status"] = sales_df["Status"].str.replace(old_value, new_value)

sales_df['Courier Status'].value_counts()

sales_df[sales_df["Courier Status"].isna()].count()

sales_df[(sales_df["Status"] == "Cancelled")&(sales_df["Courier Status"] == "Cancelled")].count()

sales_df[(sales_df["Status"] == "Cancelled")&(sales_df["Courier Status"] == "Unshipped")].count()

sales_df["Courier Status"] = np.where((sales_df["Status"] == "Cancelled") & sales_df["Courier Status"].isna(),"Cancelled", sales_df["Courier Status"])

sales_df["Courier Status"] = np.where((sales_df["Status"] == "Cancelled") & (sales_df["Courier Status"] == "Unshipped"),"Cancelled", sales_df["Courier Status"])

sales_df["Courier Status"].value_counts()

data_table.enable_dataframe_formatter()

sales_df[sales_df["Courier Status"] == "Unshipped"]

sales_df.isna().sum()

sales_df.dropna(axis = 0, inplace = True)

sales_df.isna().sum()

sales_df.duplicated().sum()

sales_df.drop_duplicates(inplace = True)

sales_df.head()

sales_df["Date"] = pd.to_datetime(sales_df["Date"], format = "%m-%d-%y")

sales_df.head()

sales_df["month"] = sales_df["Date"].dt.month_name()

m_value = ["January", "February", "March", "April", "May", "June", "July"
            "August", "September","October","November","December"]

sales_df["month"] = sales_df["month"].astype(CategoricalDtype(categories=m_value, ordered=False))

sales_df["week"] = sales_df["Date"].dt.day_name()

w_value = ["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]

sales_df["week"] = sales_df["week"].astype(CategoricalDtype(categories=w_value, ordered=False))

sales_df.head()

sales_df.columns

sales_df = sales_df.rename(columns = {
    "Order ID" : "Order_ID",
    "Sales Channel " : "Channel",
    "Courier Status" : "Courier_Status",
    "ship-city" : "City",
    "ship-state" : "State",
    "ship-postal-code" : "postcode",
    "ship-country" : "Country",
    "ship-service-level" : "Service_Level"
})

sales_df.head()

sales_df.columns

column_names_reordered = ["Order_ID","Date","month","week","Status","Fulfilment",
                          "Channel","Service_Level","Style","SKU","Category","Size","ASIN",
                          "Courier_Status","Qty","currency","Amount","City","State","postcode",
                          "Country","B2B"]

sales_df = sales_df[column_names_reordered]

sales_df.head(5)

sales_df["City"] = sales_df["City"].str.title()
sales_df["State"] = sales_df["State"].str.title()

sales_df.head()

sales_df.to_csv("Amazon_Sales_Report_cleaned.csv", index = False)